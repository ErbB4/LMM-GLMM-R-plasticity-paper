mod3 = glmer(Sholl_Intersections ~ Sham * Ipsi + (1|Radius)+(1|AnimalNo) ,family=poisson,data=data)
mod4 = glmer(Sholl_Intersections ~ Sham * Ipsi + (1+Radius|AnimalNo) ,family=poisson,data=data)
AIC(mod1,mod2,mod3,mod4)# mod3 is the best
dd2 <- dredge(mod3)
library(lme4)
library(MuMIn)
options(na.action = "na.fail")
#############24h##############
data = read.csv("Sholl_24h.csv")
data <- as.data.frame(data[data$Radius>0 & data$Radius<10,])
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod1 = glm(Sholl_Intersections ~ Sham * Ipsi,family=poisson,data=data)
mod2 = glmer(Sholl_Intersections ~ Sham * Ipsi + (1|AnimalNo/Radius) ,family=poisson,data=data)
mod3 = glmer(Sholl_Intersections ~ Sham * Ipsi + (1|Radius)+(1|AnimalNo) ,family=poisson,data=data)
mod4 = glmer(Sholl_Intersections ~ Sham * Ipsi + (1+Radius|AnimalNo) ,family=poisson,data=data)
AIC(mod1,mod2,mod3,mod4)# mod3 is the best
dd2 <- dredge(mod3)
b2 <- get.models(dd2, 1)[[1]]
dd2
summary(b2)
b2
#############24h##############
data = read.csv("Sholl_24h.csv")
data <- as.data.frame(data[data$Radius>0 & data$Radius<20,])
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
library(lme4)
###########24h, overall##########
data = read.csv("dendrite_spd_24h.csv")
library(lme4)
library(MuMIn)
#############24h##############
#load data
data = read.csv("soma_size_24h.csv")
#check data
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalNo)
options(na.action = "na.fail")
#select model
mod1 <-lmer(Area ~ Sham * Ipsi + (1|AnimalNo), data = data)
mod2 <-lm(Area ~ Sham * Ipsi, data = data)
AIC(mod1,mod2) #the random effects structure in the mod1 is optimal
dd1 <- dredge(mod1)
b1 <- get.models(dd1, 1)[[1]]
confint(b1) # not significant
#############48h##############
data = read.csv("soma_size_48h.csv")
#check data
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalNo)
options(na.action = "na.fail")
#select model
mod1 <-lmer(Area ~ Sham * Ipsi + (1|AnimalNo), data = data)
mod2 <-lm(Area ~ Sham * Ipsi, data = data)
AIC(mod1,mod2) #mod1 contains the optimal random effects structure
dd1 <- dredge(mod1)
b1 <- get.models(dd1, 1)[[1]]
confint(b1) # not significant
library(lme4)
library(MuMIn)
options(na.action = "na.fail")
#############24h##############
data = read.csv("Sholl_24h.csv")
data <- as.data.frame(data[data$Radius>0 & data$Radius<30,]) #binsize=30
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod1 = glm(Sholl_Intersections ~ Sham * Ipsi,family=poisson,data=data)
mod2 = glmer(Sholl_Intersections ~ Sham * Ipsi + (1|AnimalNo/Radius) ,family=poisson,data=data)
mod3 = glmer(Sholl_Intersections ~ Sham * Ipsi + (1|Radius)+(1|AnimalNo) ,family=poisson,data=data)
mod4 = glmer(Sholl_Intersections ~ Sham * Ipsi + (1+Radius|AnimalNo) ,family=poisson,data=data)
AIC(mod1,mod2,mod3,mod4)# mod3 is the best
dd2 <- dredge(mod3)
library(lme4)
library(MuMIn)
options(na.action = "na.fail")
#############24h##############
data = read.csv("Sholl_24h.csv")
data <- as.data.frame(data[data$Radius>0 & data$Radius<30,]) #binsize=30
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod1 = glm(Sholl_Intersections ~ Sham,family=poisson,data=data)
overdisp_fun(mod1) #tes
library(lme4)
library(MuMIn)
options(na.action = "na.fail")
overdisp_fun <- function(model) {
rdf <- df.residual(model)
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
library(lme4)
library(MuMIn)
options(na.action = "na.fail")
overdisp_fun <- function(model) {
rdf <- df.residual(model)
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
#############24h##############
data_raw = read.csv("Sholl_24h.csv")
data <- as.data.frame(data_raw[data_raw$Radius>0 & data_raw$Radius<30,]) #binsize=30
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
mod2 = glm(Sholl_Intersections ~ Sham + (1|Radius),family=poisson,data=data)
AIC(mod1,mod2)# mod3 is the best
#data type is counting
mod1 = glm(Sholl_Intersections ~ Sham,family=poisson,data=data)
mod2 = glmer(Sholl_Intersections ~ Sham + (1|Radius),family=poisson,data=data)
AIC(mod1,mod2)# mod3 is the best
overdisp_fun(mod2) #tes
summary(mod2)
data <- as.data.frame(data_raw[data_raw$Radius>30 & data_raw$Radius<60,]) #binsize=30
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod1 = glm(Sholl_Intersections ~ Sham,family=poisson,data=data)
mod2 = glmer(Sholl_Intersections ~ Sham + (1|Radius),family=poisson,data=data)
AIC(mod1,mod2)# mod2 is better
overdisp_fun(mod2) #test overdispersion
overdisp_fun(mod1) #test overdispersion
summary(mod1)
#data type is counting
mod1 = glm(Sholl_Intersections ~ Sham,family=poisson,data=data)
mod2 = glmer(Sholl_Intersections ~ Sham + (1|Radius),family=poisson,data=data)
AIC(mod1,mod2)# mod2 is better
overdisp_fun(mod1) #test overdispersion
summary(mod1)
#############24h##############
data_raw = read.csv("Sholl_24h.csv")
data <- as.data.frame(data_raw[data_raw$Radius>0 & data_raw$Radius<40,]) #binsize=30
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod1 = glm(Sholl_Intersections ~ Sham,family=poisson,data=data)
mod2 = glmer(Sholl_Intersections ~ Sham + (1|Radius),family=poisson,data=data)
AIC(mod1,mod2)# mod2 is better
overdisp_fun(mod1) #test overdispersion
overdisp_fun(mod2) #test overdispersion
summary(mod2)
#############24h##############
data_raw = read.csv("Sholl_24h.csv")
data <- as.data.frame(data_raw[data_raw$Radius>40 & data_raw$Radius<80,]) #binsize=30
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod1 = glm(Sholl_Intersections ~ Sham,family=poisson,data=data)
mod2 = glmer(Sholl_Intersections ~ Sham + (1|Radius),family=poisson,data=data)
AIC(mod1,mod2)# mod2 is better
overdisp_fun(mod2) #test overdispersion
summary(mod2)
#############24h##############
data_raw = read.csv("Sholl_24h.csv")
data <- as.data.frame(data_raw[data_raw$Radius>0 & data_raw$Radius<200,]) #binsize=30
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod1 = glm(Sholl_Intersections ~ Sham,family=poisson,data=data)
mod2 = glmer(Sholl_Intersections ~ Sham + (1|Radius),family=poisson,data=data)
AIC(mod1,mod2)# mod2 is better
overdisp_fun(mod2) #test overdispersion
summary(mod2)
library(lme4)
library(MuMIn)
options(na.action = "na.fail")
overdisp_fun <- function(model) {
rdf <- df.residual(model)
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
#############24h##############
data = read.csv("Sholl_24h.csv")
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod1 = glm(Sholl_Intersections ~ Sham,family=poisson,data=data)
#data type is counting
mod1 = glm(Sholl_Intersections ~ Sham*Ipsi*Radius,family=poisson,data=data)
mod2 = glm(Sholl_Intersections ~ Sham*Ipsi*Radius+ (1|Radius),family=poisson,data=data)
library(lme4)
library(MuMIn)
options(na.action = "na.fail")
overdisp_fun <- function(model) {
rdf <- df.residual(model)
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
#############24h##############
data = read.csv("Sholl_24h.csv")
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod1 = glm(Sholl_Intersections ~ Sham*Ipsi*Radius,family=poisson,data=data)
mod2 = glm(Sholl_Intersections ~ Sham*Ipsi*Radius+ (1|Radius),family=poisson,data=data)
mod3 = glm(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius),family=poisson,data=data)
mod4 = glm(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius/Ipsi),family=poisson,data=data)
mod4 = glm(Sholl_Intersections ~ Sham*Ipsi+ (1+Radius/Ipsi),family=poisson,data=data)
mod5 = glm(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|Ipsi),family=poisson,data=data)
#data type is counting
mod1 = glm(Sholl_Intersections ~ Sham*Ipsi*Radius,family=poisson,data=data)
mod2 = glmer(Sholl_Intersections ~ Sham*Ipsi*Radius+ (1|Radius),family=poisson,data=data)
mod3 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius),family=poisson,data=data)
mod4 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1+Radius/Ipsi),family=poisson,data=data)
mod4 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius/Ipsi),family=poisson,data=data)
mod5 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|Ipsi),family=poisson,data=data)
AIC(mod1,mod2,mod3,mod4,mod5)# mod2 is better
overdisp_fun(mod2) #test overdispersion
dd2 <- dredge(mod2)
b2 <- get.models(dd2, 1)[[1]]
b1 <- get.models(dd2, 2)[[1]]
b1 <- get.models(dd2, 3)[[1]]
overdisp_fun(b1) #test overdispersion
summary(mod1)
#data type is counting
mod3 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius),family=poisson,data=data)
mod4 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius/Ipsi),family=poisson,data=data)
mod5 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|Ipsi),family=poisson,data=data)
AIC(mod3,mod4,mod5)# mod2 is better
dd2 <- dredge(mod3)
#data type is counting
mod3 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|AnimalNo),family=poisson,data=data)
mod4 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius/Ipsi) + (1|AnimalNo),family=poisson,data=data)
mod5 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|Ipsi) + (1|AnimalNo),family=poisson,data=data)
AIC(mod3,mod4,mod5)# mod2 is better
dd2 <- dredge(mod3)
b1 <- get.models(dd2, 1)[[1]]
overdisp_fun(b1) #test overdispersion
summary(mod1)
mod3
dd2
library(lme4)
library(MuMIn)
options(na.action = "na.fail")
overdisp_fun <- function(model) {
rdf <- df.residual(model)
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
#############24h##############
data = read.csv("Sholl_24h.csv")
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod3 = lmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|AnimalNo),family=poisson,data=data)
mod4 = lmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius/Ipsi) + (1|AnimalNo),family=poisson,data=data)
#data type is counting
mod3 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|AnimalNo),family=poisson,data=data)
#data type is counting
mod3 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|AnimalNo),data=data)
mod4 = lmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius/Ipsi) + (1|AnimalNo),data=data)
mod5 = lmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|Ipsi) + (1|AnimalNo),data=data)
library(lme4)
library(MuMIn)
options(na.action = "na.fail")
overdisp_fun <- function(model) {
rdf <- df.residual(model)
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
#############24h##############
data = read.csv("Sholl_24h.csv")
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod3 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|AnimalNo),data=data)
#data type is counting
mod3 = lmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|AnimalNo),data=data)
mod4 = lmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius/Ipsi) + (1|AnimalNo),data=data)
mod5 = lmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|Ipsi) + (1|AnimalNo),data=data)
AIC(mod3,mod4,mod5)# mod3 is better
dd2 <- dredge(mod3)
b1 <- get.models(dd2, 1)[[1]]
plot(b1)
summary(b1)
b1
#data type is counting
mod3 = lmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|AnimalNo),data=data)
mod4 = lmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius/Ipsi) + (1|AnimalNo),data=data)
mod5 = lmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|Ipsi) + (1|AnimalNo),data=data)
AIC(mod3,mod4,mod5)# mod3 is better
plot(mod3)
mod3
plot(mod3)
library(lme4)
library(MuMIn)
options(na.action = "na.fail")
overdisp_fun <- function(model) {
rdf <- df.residual(model)
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
#############24h##############
data = read.csv("Sholl_24h.csv")
data <- as.data.frame(data_raw[data_raw$Radius>0 & data_raw$Radius<60,]) #binsize=30
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod3 = lmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|AnimalNo),data=data)
mod4 = lmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius/Ipsi) + (1|AnimalNo),data=data)
mod5 = lmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|Ipsi) + (1|AnimalNo),data=data)
AIC(mod3,mod4,mod5)# mod3 is better
dd2 <- dredge(mod3)
b1 <- get.models(dd2, 1)[[1]]
overdisp_fun(b1) #test overdispersion
summary(b1)
plot(b1)
#data type is counting
mod3 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|AnimalNo),family=Poisson,data=data)
#data type is counting
mod3 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|AnimalNo),family=poisson,data=data)
mod4 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius/Ipsi) + (1|AnimalNo),family=poisson,data=data)
mod5 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|Ipsi) + (1|AnimalNo),family=poisson,data=data)
AIC(mod3,mod4,mod5)# mod3 is better
dd2 <- dredge(mod3)
b1 <- get.models(dd2, 1)[[1]]
overdisp_fun(b1) #test overdispersion
summary(b1)
plot(b1)
#############24h##############
data = read.csv("Sholl_24h.csv")
data <- as.data.frame(data_raw[data_raw$Radius>60 & data_raw$Radius<200,]) #tested two subdatasets: 0-60 and 60+
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod3 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|AnimalNo),family=poisson,data=data)
mod4 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius/Ipsi) + (1|AnimalNo),family=poisson,data=data)
mod5 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|Ipsi) + (1|AnimalNo),family=poisson,data=data)
AIC(mod3,mod4,mod5)# mod3 is better
dd2 <- dredge(mod3)
b1 <- get.models(dd2, 1)[[1]]
overdisp_fun(b1) #test overdispersion
summary(b1)
polt(b1)
plot(b1)
#data type is counting
mod3 = glmer(Sholl_Intersections ~ Sham+ (1|Radius) + (1|AnimalNo),family=poisson,data=data)
mod4 = glmer(Sholl_Intersections ~ Sham+ (1|Radius/Ipsi) + (1|AnimalNo),family=poisson,data=data)
mod5 = glmer(Sholl_Intersections ~ Sham+ (1|Radius) + (1|Ipsi) + (1|AnimalNo),family=poisson,data=data)
AIC(mod3,mod4,mod5)# mod3 is better
dd2 <- dredge(mod5)
b1 <- get.models(dd2, 1)[[1]]
overdisp_fun(b1) #test overdispersion
summary(b1)
plot(b1)
#############48h##############
data = read.csv("Sholl_48h.csv")
data <- as.data.frame(data_raw[data_raw$Radius>0 & data_raw$Radius<40,]) #tested two subdatasets: 0-60 and 60+
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod3 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|AnimalNo),family=poisson,data=data)
mod4 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius/Ipsi) + (1|AnimalNo),family=poisson,data=data)
mod5 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|Ipsi) + (1|AnimalNo),family=poisson,data=data)
AIC(mod3,mod4,mod5)# mod3 is better
dd2 <- dredge(mod3)
b1 <- get.models(dd2, 1)[[1]]
overdisp_fun(b1) #test overdispersion
summary(b1)
b1 <- get.models(dd2, 2)[[1]]
overdisp_fun(b1) #test overdispersion
b1 <- get.models(dd2, 3)[[1]]
overdisp_fun(b1) #test overdispersion
b1 <- get.models(dd2, 4)[[1]]
overdisp_fun(b1) #test overdispersion
b1 <- get.models(dd2, 5)[[1]]
overdisp_fun(b1) #test overdispersion
b1 <- get.models(dd2, 6)[[1]]
overdisp_fun(b1) #test overdispersion
b1 <- get.models(dd2, 1)[[1]]
overdisp_fun(b1) #test overdispersion
#############48h##############
data = read.csv("Sholl_48h.csv")
data <- as.data.frame(data_raw[data_raw$Radius>40 & data_raw$Radius<150,]) #tested two subdatasets: 0-60 and 60+
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod3 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|AnimalNo),family=poisson,data=data)
mod4 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius/Ipsi) + (1|AnimalNo),family=poisson,data=data)
mod5 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|Ipsi) + (1|AnimalNo),family=poisson,data=data)
AIC(mod3,mod4,mod5)# mod3 is better
dd2 <- dredge(mod3)
b1 <- get.models(dd2, 1)[[1]]
overdisp_fun(b1)
#
summary(b1)
library(lme4)
library(MuMIn)
options(na.action = "na.fail")
overdisp_fun <- function(model) {
rdf <- df.residual(model)
rp <- residuals(model,type="pearson")
Pearson.chisq <- sum(rp^2)
prat <- Pearson.chisq/rdf
pval <- pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)
c(chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)
}
#############24h##############
data = read.csv("Sholl_24h.csv")
data <- as.data.frame(data_raw[data_raw$Radius>60 & data_raw$Radius<200,]) #tested two subdatasets: 0-60 and 60+
str(data)
head(data)
data$Sham <- as.factor(data$ShamOrNot)
data$Ipsi <- as.factor(data$IpsiOrNot)
data$AnimalNo <- as.factor(data$AnimalID)
data$NeuronNo <- as.factor(data$NeuronID)
#data type is counting
mod3 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|AnimalNo),family=poisson,data=data)
mod4 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius/Ipsi) + (1|AnimalNo),family=poisson,data=data)
mod5 = glmer(Sholl_Intersections ~ Sham*Ipsi+ (1|Radius) + (1|Ipsi) + (1|AnimalNo),family=poisson,data=data)
AIC(mod3,mod4,mod5)# mod3 is better
dd2 <- dredge(mod3)
b1 <- get.models(dd2, 1)[[1]]
overdisp_fun(b1) #test overdispersion
summary(b1)
