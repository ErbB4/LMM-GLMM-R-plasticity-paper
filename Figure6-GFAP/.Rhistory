library(lme4)
library(MuMIn)
data = read.csv("gfap.csv")
options(na.action = "na.fail")
data$Time <- as.factor(data$Time)
data$Sham <- as.factor(data$Sham)
data$Ipsi <- as.factor(data$Ipsi)
data$Distance2 <- as.factor(data$Distance2)
#data$Distance1 <- as.factor(data$Distance1)
data$AnimalNo <- as.factor(data$AnimalNo)
#Time1
time1 <- as.data.frame(data[data$Time=="1",])
mod1 <- lm(Intensity~Sham*Ipsi*Distance1,data=time1)
mod2 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo),REML=TRUE,data=time1)
mod3 <- lmer(Intensity~Sham*Ipsi*Distance1+(1+Distance1|AnimalNo),control=lmerControl(optimizer ="Nelder_Mead"),REML=TRUE,data=time1)
mod4 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo/Distance1),control=lmerControl(optimizer ="Nelder_Mead"),REML=TRUE,data=time1)
mod5 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo)+(1|Distance1),REML=TRUE,data=time1)
AIC(mod1,mod2,mod3,mod4,mod5) #mod2 is the best
summary(mod3)
dd3 <- dredge(mod2)
b3 <- get.models(dd3, 1)[[1]]
summary(b3)
confint(b3,level=0.95) #significant interaction between sham and distance, sham and ipsi
confint(b3,level=0.999) #significant interaction between sham and distance, sham and ipsi
confint(b3,level=0.99) #significant interaction between sham and distance, sham and ipsi
mod1 <- lm(Intensity~Sham*Ipsi*Distance1,data=time2)
mod2 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo),REML=TRUE,data=time2)
mod3 <- lmer(Intensity~Sham*Ipsi*Distance1+(1+Distance1|AnimalNo),control=lmerControl(optimizer ="Nelder_Mead"),REML=TRUE,data=time2)
mod4 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo/Distance1),control=lmerControl(optimizer ="Nelder_Mead"),REML=TRUE,data=time2)
mod5 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo)+(1|Distance1),REML=TRUE,data=time2)
AIC(mod1,mod2,mod3,mod4,mod5) #mod2 is the best
summary(mod2)
dd4 <- dredge(mod2)
AIC(mod1,mod2,mod3,mod4,mod5) #mod2 is the best
summary(mod3)
dd4 <- dredge(mod2)
dd4 <- dredge(mod3)
b4 <- get.models(dd4, 1)[[1]]
summary(b4)
confint(b4,level=0.95) #significant effects of sham, interaction between sham and distance, sham and ipsi, and three of them
confint(b4,level=0.99)
mod1 <- lm(Intensity~Sham*Ipsi*Distance1,data=time2)
library(lme4)
library(MuMIn)
data = read.csv("gfap.csv")
options(na.action = "na.fail")
data$Time <- as.factor(data$Time)
data$Sham <- as.factor(data$Sham)
data$Ipsi <- as.factor(data$Ipsi)
data$Distance2 <- as.factor(data$Distance2)
#data$Distance1 <- as.factor(data$Distance1)
data$AnimalNo <- as.factor(data$AnimalNo)
#Time1
time1 <- as.data.frame(data[data$Time=="1",])
mod1 <- lm(Intensity~Sham*Ipsi*Distance1,data=time1)
mod2 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo),REML=TRUE,data=time1)
mod3 <- lmer(Intensity~Sham*Ipsi*Distance1+(1+Distance1|AnimalNo),control=lmerControl(optimizer ="Nelder_Mead"),REML=TRUE,data=time1)
mod4 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo/Distance1),control=lmerControl(optimizer ="Nelder_Mead"),REML=TRUE,data=time1)
mod5 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo)+(1|Distance1),REML=TRUE,data=time1)
AIC(mod1,mod2,mod3,mod4,mod5) #mod3 is the best
summary(mod3)
dd3 <- dredge(mod2)
b3 <- get.models(dd3, 1)[[1]]
summary(b3)
confint(b3,level=0.95)
confint(b3,level=0.99)
confint(b3,level=0.999)
#Time2
time2 <- as.data.frame(data[data$Time=="2",])
mod1 <- lm(Intensity~Sham*Ipsi*Distance1,data=time2)
mod2 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo),REML=TRUE,data=time2)
mod3 <- lmer(Intensity~Sham*Ipsi*Distance1+(1+Distance1|AnimalNo),control=lmerControl(optimizer ="Nelder_Mead"),REML=TRUE,data=time2)
mod4 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo/Distance1),control=lmerControl(optimizer ="Nelder_Mead"),REML=TRUE,data=time2)
mod5 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo)+(1|Distance1),REML=TRUE,data=time2)
AIC(mod1,mod2,mod3,mod4,mod5) #mod3 is the best
summary(mod2)
dd4 <- dredge(mod3)
dd4 <- dredge(mod2)
b4 <- get.models(dd4, 1)[[1]]
summary(b4)
confint(b4,level=0.95)
confint(b4,level=0.99)
confint(b4,level=0.999)
#Time3
time3 <- as.data.frame(data[data$Time=="3",])
mod1 <- lm(Intensity~Sham*Ipsi*Distance1,data=time3)
mod2 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo),REML=TRUE,data=time3)
mod3 <- lmer(Intensity~Sham*Ipsi*Distance1+(1+Distance1|AnimalNo),control=lmerControl(optimizer ="Nelder_Mead"),REML=TRUE,data=time3)
mod4 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo/Distance1),control=lmerControl(optimizer ="Nelder_Mead"),REML=TRUE,data=time3)
mod5 <- lmer(Intensity~Sham*Ipsi*Distance1+(1|AnimalNo)+(1|Distance1),REML=TRUE,data=time3)
AIC(mod1,mod2,mod3,mod4,mod5) #mod2 is the best
summary(mod2)
dd2 <- dredge(mod2)
b2 <- get.models(dd2, 1)[[1]]
summary(b2)
confint(b2,level=0.95)
confint(b2,level=0.99)
confint(b2,level=0.999)
library(lme4)
# importin data
data = read.csv("gfap.csv")
# specifiy certain variables as factors
str(data)
head(data)
data$Time <- as.factor(data$Time)
data$Sham <- as.factor(data$Sham)
data$Ipsi <- as.factor(data$Ipsi)
data$Distance2 <- as.factor(data$Distance2)
data$Distance1 <- as.factor(data$Distance1)
data$AnimalNo <- as.factor(data$AnimalNo)
time1 <- as.data.frame(data[data$Time=="1",])
time2 <- as.data.frame(data[data$Time=="2",])
time3 <- as.data.frame(data[data$Time=="3",])
time1 <- as.data.frame(data[data$Time=="1",])
time2 <- as.data.frame(data[data$Time=="2",])
time3 <- as.data.frame(data[data$Time=="3",])
time1$Intensity <- time1$Intensity/4293099.166666667
time2$Intensity <- time2$Intensity/4709762.8
time3$Intensity <- time3$Intensity/4080508.166666667
# Time 1
m.T1.int <- lmer(Intensity ~ Sham * Ipsi + (1|AnimalNo/Distance2),data = time1)
m.T1.add <- lmer(Intensity ~ Sham + Ipsi + (1|AnimalNo/Distance2),data = time1)
m.T1.sham <- lmer(Intensity ~ Sham + (1|AnimalNo/Distance2),data = time1)
m.T1.ipsi <- lmer(Intensity ~ Ipsi + (1|AnimalNo/Distance2),data = time1)
m.T1.null  = lmer(Intensity ~ 1 + (1|AnimalNo/Distance2),data = time1)
AIC(m.T1.int,m.T1.add,m.T1.sham,m.T1.ipsi,m.T1.null)# interaction model is the best
# Then check whether the model fulfills the assumptions:
# residuals look very good
library(lattice)
trellis.par.set("background$col" = "white")
par(mar = rep(2, 4))
plot(m.T1.int)
qqnorm(residuals(m.T1.int))
qqline(residuals(m.T1.int))
#print confidence interval
summary(m.T1.int)
confint(m.T1.int) # not significant
confint(m.T1.int) # not significant
# Time 2
m.T2.int <- lmer(Intensity ~ Sham * Ipsi + (1|AnimalNo/Distance2),data = time2)
m.T2.add <- lmer(Intensity ~ Sham + Ipsi + (1|AnimalNo/Distance2),data = time2)
m.T2.sham <- lmer(Intensity ~ Sham + (1|AnimalNo/Distance2),data = time2)
m.T2.ipsi <- lmer(Intensity ~ Ipsi + (1|AnimalNo/Distance2),data = time2)
m.T2.null  = lmer(Intensity ~ 1 + (1|AnimalNo/Distance2),data = time2)
AIC(m.T2.int,m.T2.add,m.T2.sham,m.T2.ipsi,m.T2.null)# again: the interaction should be kept
plot(m.T2.int) # this looks ok
summary(m.T2.int) # stimulationa and the interaction with ipsi are significant. Please ignore the effects of distance in this case
confint(m.T2.int,level=0.99)
confint(m.T2.int,level=0.995)
# Time 3: here the interaction is significant too!
m.T3.int <- lmer(Intensity ~ Sham * Ipsi + (1|AnimalNo/Distance2),data = time3)
m.T3.add <- lmer(Intensity ~ Sham + Ipsi + (1|AnimalNo/Distance2),data = time3)
m.T3.sham <- lmer(Intensity ~ Sham + (1|AnimalNo/Distance2),data = time3)
m.T3.ipsi <- lmer(Intensity ~ Ipsi + (1|AnimalNo/Distance2),data = time3)
m.T3.null  = lmer(Intensity ~ 1 + (1|AnimalNo/Distance2),data = time3)
AIC(m.T3.int,m.T3.add,m.T3.sham,m.T3.ipsi,m.T3.null)#
plot(m.T3.int) # I removed point 338
summary(m.T3.int) #
confint(m.T3.int,level=0.95)
confint(m.T1.int,level=0.95)
confint(m.T1.int,level=0.99)
confint(m.T1.int,level=0.995)
confint(m.T1.int,level=0.95)
confint(m.T2.int,level=0.95)
confint(m.T2.int,level=0.99)
confint(m.T2.int,level=0.995)
confint(m.T1.int,level=0.95)
confint(m.T1.int,level=0.99)
confint(m.T1.int,level=0.995)
library(lme4)
# importin data
data = read.csv("gfap.csv")
# specifiy certain variables as factors
str(data)
library(lme4)
# importin data
data = read.csv("gfap.csv")
# specifiy certain variables as factors
str(data)
head(data)
data$Time <- as.factor(data$Time)
data$Sham <- as.factor(data$Sham)
data$Ipsi <- as.factor(data$Ipsi)
data$Distance2 <- as.factor(data$Distance2)
data$Distance1 <- as.factor(data$Distance1)
data$AnimalNo <- as.factor(data$AnimalNo)
time1 <- as.data.frame(data[data$Time=="1",])
time2 <- as.data.frame(data[data$Time=="2",])
time3 <- as.data.frame(data[data$Time=="3",])
time1$Intensity <- time1$Intensity/4293099.166666667
time2$Intensity <- time2$Intensity/4709762.8
time3$Intensity <- time3$Intensity/4080508.166666667
time1
time2
# Time 1
m.T1.int <- lmer(Intensity ~ Sham * Ipsi + (1|AnimalNo/Distance2),data = time1)
m.T1.add <- lmer(Intensity ~ Sham + Ipsi + (1|AnimalNo/Distance2),data = time1)
m.T1.sham <- lmer(Intensity ~ Sham + (1|AnimalNo/Distance2),data = time1)
m.T1.ipsi <- lmer(Intensity ~ Ipsi + (1|AnimalNo/Distance2),data = time1)
m.T1.null  = lmer(Intensity ~ 1 + (1|AnimalNo/Distance2),data = time1)
AIC(m.T1.int,m.T1.add,m.T1.sham,m.T1.ipsi,m.T1.null)# interaction model is the best
# Then check whether the model fulfills the assumptions:
# residuals look very good
library(lattice)
trellis.par.set("background$col" = "white")
par(mar = rep(2, 4))
plot(m.T1.int)
qqnorm(residuals(m.T1.int))
qqline(residuals(m.T1.int))
#print confidence interval
summary(m.T1.int)
confint(m.T1.int) # not significant
confint(m.T1.int,level=0.99) # not significant
confint(m.T1.int,level=0.995) # not significant
# Time 2
m.T2.int <- lmer(Intensity ~ Sham * Ipsi + (1|AnimalNo/Distance2),data = time2)
m.T2.add <- lmer(Intensity ~ Sham + Ipsi + (1|AnimalNo/Distance2),data = time2)
m.T2.sham <- lmer(Intensity ~ Sham + (1|AnimalNo/Distance2),data = time2)
m.T2.ipsi <- lmer(Intensity ~ Ipsi + (1|AnimalNo/Distance2),data = time2)
m.T2.null  = lmer(Intensity ~ 1 + (1|AnimalNo/Distance2),data = time2)
AIC(m.T2.int,m.T2.add,m.T2.sham,m.T2.ipsi,m.T2.null)# again: the interaction should be kept
plot(m.T2.int) # this looks ok
summary(m.T2.int) # stimulationa and the interaction with ipsi are significant. Please ignore the effects of distance in this case
confint(m.T2.int,level=0.995)
# Time 3: here the interaction is significant too!
m.T3.int <- lmer(Intensity ~ Sham * Ipsi + (1|AnimalNo/Distance2),data = time3)
m.T3.add <- lmer(Intensity ~ Sham + Ipsi + (1|AnimalNo/Distance2),data = time3)
# Time 3: here the interaction is significant too!
m.T3.int <- lmer(Intensity ~ Sham * Ipsi + (1|AnimalNo/Distance2),data = time3)
m.T3.add <- lmer(Intensity ~ Sham + Ipsi + (1|AnimalNo/Distance2),data = time3)
m.T3.sham <- lmer(Intensity ~ Sham + (1|AnimalNo/Distance2),data = time3)
m.T3.ipsi <- lmer(Intensity ~ Ipsi + (1|AnimalNo/Distance2),data = time3)
m.T3.null  = lmer(Intensity ~ 1 + (1|AnimalNo/Distance2),data = time3)
AIC(m.T3.int,m.T3.add,m.T3.sham,m.T3.ipsi,m.T3.null)#
plot(m.T3.int) # I removed point 338
summary(m.T3.int) #
confint(m.T3.int,level=0.95)
confint(m.T3.int,level=0.995)
confint(m.T3.int,level=0.99)
confint(m.T3.int,level=0.95)
confint(m.T3.int,level=0.99)
confint(m.T3.int,level=0.995)
